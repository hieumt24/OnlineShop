@using OnlineShop.Utils
@model List<OnlineShop.Models.Db.Product>

<!--shop  area start-->
<div class="shop_section shop_reverse">
    <div class="container">
        <div class="row mt-5">

            <div class="col-lg-9 col-md-12 mx-auto">
                <!--shop wrapper start-->

                <!--breadcrumbs area start-->
                <div class="breadcrumb_content">
                    <ul>
                        <li><a href="/">home</a></li>
                        <li><a href="/products">shop</a></li>
                    </ul>
                </div>
                <!--breadcrumbs area end-->

                <!--shop toolbar start-->
                <div class="shop_toolbar_wrapper d-flex justify-content-between align-items-center">
                    <div class="page_amount">
                        <p><span>@Model.Count</span> Products Found</p>
                    </div>
                    <div class="toolbar_btn_wrapper d-flex align-items-center">
                        <div class="view_btn">
                            <a class="view" href="#">VIEW</a>
                        </div>
                        <div class="shop_toolbar_btn">
                            <ul class="d-flex align-items-center">
                                <li><a href="#" class="active btn-grid-3" data-role="grid_3" data-tippy="3"
                                       data-tippy-inertia="true" data-tippy-delay="50" data-tippy-arrow="true"
                                       data-tippy-placement="top"><i class="ion-grid"></i></a></li>

                                <li><a href="#" class="btn-list" data-role="grid_list" data-tippy="List"
                                       data-tippy-inertia="true" data-tippy-delay="50" data-tippy-arrow="true"
                                       data-tippy-placement="top"><i class="ion-navicon"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <!--shop toolbar end-->
                <div class="row shop_wrapper">
                    @foreach (var item in Model)
                    {
                        <div class="col-lg-4 col-md-4 col-sm-6 col-6 ">
                            <div class="single_product">
                                <div class="product_thumb">
                                    <a href="/products/productdetails/@item.Id">
                                        <img class="primary_img" src="/images/banners/@item.ImageName"
                                             alt="@item.ImageName">
                                    </a>
                                    @if (item.Discount != null && item.Price > 0)
                                    {
                                        <div class="product_label">
                                            @{
                                                decimal? discountPercentage;
                                                discountPercentage = (item.Discount.GetValueOrDefault(0) / item.Price.GetValueOrDefault(0)) * 100;
                                            }
                                            <span>
                                                -@discountPercentage.GetValueOrDefault(0).ToString("F0")%
                                            </span>
                                        </div>
                                    }
                                </div>
                                <div class="product_content grid_content text-center">
                                    <h4 class="product_name"><a href="/products/productdetails/@item.Id">@item.Title</a></h4>
                                    <div class="price_box">
                                        @if (item.Discount != null)
                                        {
                                            <span class="current_price">
                                                @{
                                                    decimal? discountedPrice;
                                                    discountedPrice = item.Price.GetValueOrDefault(0) - item.Discount.GetValueOrDefault(0);
                                                }
                                                @CurrencyConverter.FormatToVND(discountedPrice.GetValueOrDefault(0))
                                            </span>
                                            <span class="old_price">@CurrencyConverter.FormatToVND(item.Price.GetValueOrDefault(0))</span>
                                        }
                                        else
                                        {
                                            <span
                                                class="current-price">@CurrencyConverter.FormatToVND(item.Price.GetValueOrDefault(0))</span>
                                        }
                                    </div>
                                    <div class="add_to_cart">
                                        <a class="btn btn-primary" href="#" data-tippy="Add To Cart" onclick="updateCart(@item.Id,1)"
                                           data-tippy-inertia="true" data-tippy-delay="50" data-tippy-arrow="true"
                                           data-tippy-placement="top">Add To Cart</a>
                                    </div>
                                </div>
                                <div class="product_list_content">
                                    <h4 class="product_name"><a href="product-details.html">@item.Title</a></h4>
                                    <p><a href="#">shows</a></p>
                                    <div class="price_box">
                                        @if (item.Discount != null)
                                        {
                                            <span class="current_price">
                                                @{
                                                    decimal? discountedPrice;
                                                    discountedPrice = item.Price.GetValueOrDefault(0) - item.Discount.GetValueOrDefault(0);
                                                }
                                                @CurrencyConverter.FormatToVND(discountedPrice.GetValueOrDefault(0))
                                            </span>
                                            <span class="old_price">@CurrencyConverter.FormatToVND(item.Price.GetValueOrDefault(0))</span>
                                        }
                                        else
                                        {
                                            <span
                                                class="current-price">@CurrencyConverter.FormatToVND(item.Price.GetValueOrDefault(0))</span>
                                        }
                                    </div>
                                    <div class="product_desc">
                                        <p>@item.Description</p>
                                    </div>
                                    <div class="add_to_cart">
                                        <a class="btn btn-primary" onclick="updateCart(@item.Id, 1)" data-tippy="Add To Cart"
                                           data-tippy-inertia="true" data-tippy-delay="50" data-tippy-arrow="true"
                                           data-tippy-placement="top">Add To Cart</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>

                <!--shop toolbar end-->
                <!--shop wrapper end-->
            </div>
        </div>
    </div>
</div>
<!--shop  area end-->

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script>
    // 1) Khởi tạo connection tới ProductHub
    const shopConnection = new signalR.HubConnectionBuilder()
      .withUrl("/productHub")
      .withAutomaticReconnect()
      .configureLogging(signalR.LogLevel.Information)
      .build();

    // 2) Đăng ký các sự kiện realtime
    shopConnection.on("ProductCreated", data => {
      console.log("Shop received new product:", data);
      addProductCard(data);
    });
    shopConnection.on("ProductUpdated", data => {
      console.log("Shop received updated product:", data);
      updateProductCard(data);
    });
    shopConnection.on("ProductDeleted", data => {
      console.log("Shop received deleted product:", data);
      removeProductCard(data.id);
    });

    // 3) Bắt đầu kết nối
    shopConnection.start()
      .then(() => console.log("SignalR shop connected"))
      .catch(err => console.error(err));
  </script>
}